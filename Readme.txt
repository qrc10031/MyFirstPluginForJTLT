

本项目是经天路图插件式开发的示例项目

环境搭建
		首先，下载经天路图公测版并安装，本项目的一切依赖环境均在经天路图软件中可以找到。
		经天路图公测版下载地址：http://jtltbk.bimscodi.cn:8493/jtlt-download-beta/
		下载后，按照【腾讯文档】经天路图正式版安装步骤 https://docs.qq.com/doc/DWll4dkdFWHRqUVV0 安装
		安装完成，打开经天路图，经天路图目前需要授权注册账号

		安装完成后，拉取本插件代码库，并开始部署环境，部署步骤如下：
		（1）添加项目引用路径：
		本项目右键【属性】-【引用路径】，在【文件夹】一栏点击“浏览”，依次添加以下文件目录：
		（注：“-X”表示经天路图安装目录，如果是默认安装，则"-X"为：C:\Program Files (x86)\SCODI\JTLT_beta）
				-X\3rdLibs\Devs\
				-X\3rdLibs\Eyeshot\
				-X\3rdLibs\MicroS\
				-X\3rdLibs\Nuget\
				-X\libs\
				-X\Plugins\3DGIS\Bin_X64\
				-X\Plugins\3DGIS\libs\
		添加以上引用路径后，项目引用中的黄色叹号将消失
		（2）修改项目生成路径
		打开经天路图安装目录，在-X\Plugins\目录下，创建一个新文件夹，此处以“MyNewPlugin”为例；
		然后本项目右键【属性】-【生成】，在【输出路径】一栏，点击浏览，选择刚才创建的文件夹，此处选择结
		果为-X\Plugins\MyNewPlugin\
		（3）修改调试信息
		本项目右键【属性】-【调试】，在【启动外部程序】一栏，点击浏览，选择安装的经天路图可执行程序，若是
		默认安装，则应该为“C:\Program Files (x86)\SCODI\JTLT_beta\经天路图.exe”
		（4）生成项目
		（5）找到经天路图插件配置文件，文件路径-X\Plugins\Pluginlist.LocalConfig，使用文本编辑工具打开此文件，
		在文本内部添加一行，内容为：“Plugins\MyNewPlugin\JTLTPluginDemo_plg.dll”，含义是让经天路图下次启动
		时，将此插件加载。
		（6）完成

		
		注意！！！
		（1）插件只能是类库项目；
		（2）插件dll名称要以"_plg.dll结尾"，否则不会被识别为插件；
		（3）插件要放在安装目录的Plugins文件夹下的子文件夹中；
		（4）调试插件式，进入项目【属性】-【调试】-【启动外部程序】，选择安装完成的“经天路图.exe”，并在经天路图
		中勾选此插件加载。
		（5）如果此项目需要引用第三方库，请阅读后面的“高级技巧”。

实例代码文件说明

		MyMainForm.cs是主窗体代码，用于布置本插件的UI，布置完成UI后，按照框架代码，将UI提交给主程序窗体，
		从而完成主界面合并。
		MyMainForm.cs中采用了DevExpress的RibbonControl控件，该控件有RibbonPage、RibbonGroup的子集合概
		念，如果多个插件取名了相同的RibbonPage或RibbonGroup，合并UI时，框架会自动将其合并。


		DataAccessMgr.cs包含了框架的文件系统操作接口，经天路图项目文件有“新建”、“保存”、“打开”三种操作。在
		解释之前，首先了解经天路图的框架-插件工作原理。当执行一项操作时，首先由系统框架发起，系统框架执行预处
		理，预处理完成后，由框架负责依次调用每个插件，执行相应的操作，所有插件执行完毕后，再有框架执行后处理
		操作，如下所示：
		------<打开流程>：框架执行打开 → 插件1执行打开 → 插件2执行打开 → 插件3执行打开 → 框架完成打开---------
		因此，DataAccessMgr.cs中，包含了Load(打开)、Save(保存)、Reset(新建)三个接口方法，这三个方法将在系
		统执行文件操作时，统一调用。对于插件之间的调用顺序，如果存在冲突问题，可以通过安装目录下
		\LocalConfig\DataOperOrderNew.LocalConfig、\LocalConfig\DataOperOrderOpen.LocalConfig、
		\LocalConfig\DataOperOrderSave.LocalConfig三个配置文件进行调整，一般情况下，不会出现这种冲突。


		Commands文件夹中，提供了三个命令类文件，命令是经天路图实现人机交互的关键，命令分为两类：
		（1）普通命令ICommandExt；
		（2）交互命令IDrawCommandExt。
		其中，普通命令只提供激活功能，具体实现见代码。交互命令，提供了大量用于和三维地球进行人机交互的接口，
		如鼠标点击、鼠标移动、键盘按下、从鼠标获取Feature对象等等操作，是实现高级人机交互的关键。
		此外，由于完全手写一个交互式命令较为麻烦，所以提供了一种扩展式的命令，通过调用已经内置写好的命令，
		只需编写命令执行完毕后要执行的代码逻辑，从而完成一些列操作，这种方式能够更快实现功能，具体写法见
		MyCommandExt.cs文件。
		各类命令的激活和调用，可在MyMainForm.cs中找到，调用命令的写法是固定的，可直接照抄。

		Params.cs是本插件的参数存放地点，采用单例调用。在此文件中，可添加基本数据格式的参数，用于控制程序执行，
		且这些参数会随着项目保存而保存，是跟随项目的。


		Str.cs和Util.cs中，分别存放的是静态字段和静态对象应用，目的是为了在其他位置方便调用。


		插件的名称在项目【属性】-【程序集信息】-【产品】一栏修改，加载插件和卸载插件，在经天路图的【扩展管理】
		中操作。


高级技巧

Q：如何引用自己的第三方代码库
A：请打开本项目的AssemblyReference.cs文件查看

Q：如果自己引用的第三方库和别的模块引用的第三方库重名，但是版本不同，如何处理？
A：请打开本项目的AssemblyReference.cs文件查看




-----------------------------------------以上----------------------------------------------